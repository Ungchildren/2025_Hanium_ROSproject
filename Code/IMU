
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Imu
from pymongo import MongoClient
import datetime

class ImuLogger(Node):
    def __init__(self):
        super().__init__('imu_logger')

        # MongoDB Atlas 연결
        self.mongo_client = MongoClient("mongodb+srv://ungchildren:ungchildren@ungchildren.mywuke3.mongodb.net/?retryWrites=true&w=majo$
        self.db = self.mongo_client["robot_data"]
        self.collection = self.db["imu"]

        # ROS2 IMU 토픽 구독
        self.subscription = self.create_subscription(
            Imu,
            '/imu/data',
            self.listener_callback,
            10
        )

        # 최초 1회 출력 로그
        self.get_logger().info("MongoDB 연결 완료 및 /imu/data 구독 시작")

    def listener_callback(self, msg):
        doc = {
            "_id": "imu",  # 이 키를 기준으로 덮어씀
            "timestamp": rclpy.time.Time.from_msg(msg.header.stamp).nanoseconds,
            "orientation": {
                "x": msg.orientation.x,
                "y": msg.orientation.y,
                "z": msg.orientation.z,
                "w": msg.orientation.w,
            },
            "angular_velocity": {
                "x": msg.angular_velocity.x,
                "y": msg.angular_velocity.y,
                "z": msg.angular_velocity.z,
            },
            "linear_acceleration": {
                "x": msg.linear_acceleration.x,
                "y": msg.linear_acceleration.y,
                "z": msg.linear_acceleration.z,
            },
            "inserted_at": datetime.datetime.utcnow()
        }
        # 문서 1개만 유지 (없으면 insert, 있으면 교체)
        self.collection.replace_one({"_id": "imu"}, doc, upsert=True)

        # 반복 로그 출력은 생략
        # self.get_logger().info(f"IMU data updated at: {doc['timestamp']}")

def main(args=None):
    rclpy.init(args=args)
    imu_logger = ImuLogger()
    rclpy.spin(imu_logger)
    imu_logger.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
